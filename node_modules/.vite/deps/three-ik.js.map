{
  "version": 3,
  "sources": ["../../three-ik/build/three-ik.module.js"],
  "sourcesContent": ["import { AxesHelper, Color, ConeGeometry, Matrix4, Mesh, MeshBasicMaterial, Object3D, Vector3, MathUtils } from 'three';\n\nvar t1 = new Vector3();\nvar t2 = new Vector3();\nvar t3 = new Vector3();\nvar m1 = new Matrix4();\nfunction getWorldPosition(object, target) {\n  return target.setFromMatrixPosition(object.matrixWorld);\n}\n\nfunction getCentroid(positions, target) {\n  target.set(0, 0, 0);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n  try {\n    for (var _iterator = positions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var position = _step.value;\n      target.add(position);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n  target.divideScalar(positions.length);\n  return target;\n}\nfunction setQuaternionFromDirection(direction, up, target) {\n  var x = t1;\n  var y = t2;\n  var z = t3;\n  var m = m1;\n  var el = m1.elements;\n  z.copy(direction);\n  x.crossVectors(up, z);\n  if (x.lengthSq() === 0) {\n    if (MathUtils.abs(up.z) === 1) {\n      z.x += 0.0001;\n    } else {\n      z.z += 0.0001;\n    }\n    z.normalize();\n    x.crossVectors(up, z);\n  }\n  x.normalize();\n  y.crossVectors(z, x);\n  el[0] = x.x;el[4] = y.x;el[8] = z.x;\n  el[1] = x.y;el[5] = y.y;el[9] = z.y;\n  el[2] = x.z;el[6] = y.z;el[10] = z.z;\n  target.setFromRotationMatrix(m);\n}\nfunction transformPoint(vector, matrix, target) {\n  var e = matrix.elements;\n  var x = vector.x * e[0] + vector.y * e[4] + vector.z * e[8] + e[12];\n  var y = vector.x * e[1] + vector.y * e[5] + vector.z * e[9] + e[13];\n  var z = vector.x * e[2] + vector.y * e[6] + vector.z * e[10] + e[14];\n  var w = vector.x * e[3] + vector.y * e[7] + vector.z * e[11] + e[15];\n  target.set(x / w, y / w, z / w);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar Z_AXIS = new Vector3(0, 0, 1);\nvar DEG2RAD = MathUtils.DEG2RAD;\nvar RAD2DEG = MathUtils.RAD2DEG;\nvar IKBallConstraint = function () {\n  function IKBallConstraint(angle) {\n    classCallCheck(this, IKBallConstraint);\n    this.angle = angle;\n  }\n  createClass(IKBallConstraint, [{\n    key: '_apply',\n    value: function _apply(joint) {\n      var direction = new Vector3().copy(joint._getDirection());\n      var parentDirection = joint._localToWorldDirection(new Vector3().copy(Z_AXIS)).normalize();\n      var currentAngle = direction.angleTo(parentDirection) * RAD2DEG;\n      if (this.angle / 2 < currentAngle) {\n        direction.normalize();\n        var correctionAxis = new Vector3().crossVectors(parentDirection, direction).normalize();\n        parentDirection.applyAxisAngle(correctionAxis, this.angle * DEG2RAD * 0.5);\n        joint._setDirection(parentDirection);\n        return true;\n      }\n      return false;\n    }\n  }]);\n  return IKBallConstraint;\n}();\n\nvar Y_AXIS = new Vector3(0, 1, 0);\nvar IKJoint = function () {\n  function IKJoint(bone) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        constraints = _ref.constraints;\n    classCallCheck(this, IKJoint);\n    this.constraints = constraints || [];\n    this.bone = bone;\n    this.distance = 0;\n    this._originalDirection = new Vector3();\n    this._direction = new Vector3();\n    this._worldPosition = new Vector3();\n    this._isSubBase = false;\n    this._subBasePositions = null;\n    this.isIKJoint = true;\n    this._updateWorldPosition();\n  }\n  createClass(IKJoint, [{\n    key: '_setIsSubBase',\n    value: function _setIsSubBase() {\n      this._isSubBase = true;\n      this._subBasePositions = [];\n    }\n  }, {\n    key: '_applySubBasePositions',\n    value: function _applySubBasePositions() {\n      if (this._subBasePositions.length === 0) {\n        return;\n      }\n      getCentroid(this._subBasePositions, this._worldPosition);\n      this._subBasePositions.length = 0;\n    }\n  }, {\n    key: '_applyConstraints',\n    value: function _applyConstraints() {\n      if (!this.constraints) {\n        return;\n      }\n      var constraintApplied = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = this.constraints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var constraint = _step.value;\n          if (constraint && constraint._apply) {\n            var applied = constraint._apply(this);\n            constraintApplied = constraintApplied || applied;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return constraintApplied;\n    }\n  }, {\n    key: '_setDistance',\n    value: function _setDistance(distance) {\n      this.distance = distance;\n    }\n  }, {\n    key: '_getDirection',\n    value: function _getDirection() {\n      return this._direction;\n    }\n  }, {\n    key: '_setDirection',\n    value: function _setDirection(direction) {\n      this._direction.copy(direction);\n    }\n  }, {\n    key: '_getDistance',\n    value: function _getDistance() {\n      return this.distance;\n    }\n  }, {\n    key: '_updateMatrixWorld',\n    value: function _updateMatrixWorld() {\n      this.bone.updateMatrixWorld(true);\n    }\n  }, {\n    key: '_getWorldPosition',\n    value: function _getWorldPosition() {\n      return this._worldPosition;\n    }\n  }, {\n    key: '_getWorldDirection',\n    value: function _getWorldDirection(joint) {\n      return new Vector3().subVectors(this._getWorldPosition(), joint._getWorldPosition()).normalize();\n    }\n  }, {\n    key: '_updateWorldPosition',\n    value: function _updateWorldPosition() {\n      getWorldPosition(this.bone, this._worldPosition);\n    }\n  }, {\n    key: '_setWorldPosition',\n    value: function _setWorldPosition(position) {\n      this._worldPosition.copy(position);\n    }\n  }, {\n    key: '_localToWorldDirection',\n    value: function _localToWorldDirection(direction) {\n      if (this.bone.parent) {\n        var parent = this.bone.parent.matrixWorld;\n        direction.transformDirection(parent);\n      }\n      return direction;\n    }\n  }, {\n    key: '_worldToLocalDirection',\n    value: function _worldToLocalDirection(direction) {\n      if (this.bone.parent) {\n        var inverseParent = new Matrix4().getInverse(this.bone.parent.matrixWorld);\n        direction.transformDirection(inverseParent);\n      }\n      return direction;\n    }\n  }, {\n    key: '_applyWorldPosition',\n    value: function _applyWorldPosition() {\n      var direction = new Vector3().copy(this._direction);\n      var position = new Vector3().copy(this._getWorldPosition());\n      var parent = this.bone.parent;\n      if (parent) {\n        this._updateMatrixWorld();\n        var inverseParent = new Matrix4().getInverse(this.bone.parent.matrixWorld);\n        transformPoint(position, inverseParent, position);\n        this.bone.position.copy(position);\n        this._updateMatrixWorld();\n        this._worldToLocalDirection(direction);\n        setQuaternionFromDirection(direction, Y_AXIS, this.bone.quaternion);\n      } else {\n        this.bone.position.copy(position);\n      }\n      this.bone.updateMatrix();\n      this._updateMatrixWorld();\n    }\n  }, {\n    key: '_getWorldDistance',\n    value: function _getWorldDistance(joint) {\n      return this._worldPosition.distanceTo(joint.isIKJoint ? joint._getWorldPosition() : getWorldPosition(joint, new Vector3()));\n    }\n  }]);\n  return IKJoint;\n}();\n\nvar IKChain = function () {\n  function IKChain() {\n    classCallCheck(this, IKChain);\n    this.isIKChain = true;\n    this.totalLengths = 0;\n    this.base = null;\n    this.effector = null;\n    this.effectorIndex = null;\n    this.chains = new Map();\n    this.origin = null;\n    this.iterations = 100;\n    this.tolerance = 0.01;\n    this._depth = -1;\n    this._targetPosition = new Vector3();\n  }\n  createClass(IKChain, [{\n    key: 'add',\n    value: function add(joint) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          target = _ref.target;\n      if (this.effector) {\n        throw new Error('Cannot add additional joints to a chain with an end effector.');\n      }\n      if (!joint.isIKJoint) {\n        if (joint.isBone) {\n          joint = new IKJoint(joint);\n        } else {\n          throw new Error('Invalid joint in an IKChain. Must be an IKJoint or a THREE.Bone.');\n        }\n      }\n      this.joints = this.joints || [];\n      this.joints.push(joint);\n      if (this.joints.length === 1) {\n        this.base = this.joints[0];\n        this.origin = new Vector3().copy(this.base._getWorldPosition());\n      }\n      else {\n          var previousJoint = this.joints[this.joints.length - 2];\n          previousJoint._updateMatrixWorld();\n          previousJoint._updateWorldPosition();\n          joint._updateWorldPosition();\n          var distance = previousJoint._getWorldDistance(joint);\n          if (distance === 0) {\n            throw new Error('bone with 0 distance between adjacent bone found');\n          }\n          joint._setDistance(distance);\n          joint._updateWorldPosition();\n          var direction = previousJoint._getWorldDirection(joint);\n          previousJoint._originalDirection = new Vector3().copy(direction);\n          joint._originalDirection = new Vector3().copy(direction);\n          this.totalLengths += distance;\n        }\n      if (target) {\n        this.effector = joint;\n        this.effectorIndex = joint;\n        this.target = target;\n      }\n      return this;\n    }\n  }, {\n    key: '_hasEffector',\n    value: function _hasEffector() {\n      return !!this.effector;\n    }\n  }, {\n    key: '_getDistanceFromTarget',\n    value: function _getDistanceFromTarget() {\n      return this._hasEffector() ? this.effector._getWorldDistance(this.target) : -1;\n    }\n  }, {\n    key: 'connect',\n    value: function connect(chain) {\n      if (!chain.isIKChain) {\n        throw new Error('Invalid connection in an IKChain. Must be an IKChain.');\n      }\n      if (!chain.base.isIKJoint) {\n        throw new Error('Connecting chain does not have a base joint.');\n      }\n      var index = this.joints.indexOf(chain.base);\n      if (this.target && index === this.joints.length - 1) {\n        throw new Error('Cannot append a chain to an end joint in a chain with a target.');\n      }\n      if (index === -1) {\n        throw new Error('Cannot connect chain that does not have a base joint in parent chain.');\n      }\n      this.joints[index]._setIsSubBase();\n      var chains = this.chains.get(index);\n      if (!chains) {\n        chains = [];\n        this.chains.set(index, chains);\n      }\n      chains.push(chain);\n      return this;\n    }\n  }, {\n    key: '_updateJointWorldPositions',\n    value: function _updateJointWorldPositions() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = this.joints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var joint = _step.value;\n          joint._updateWorldPosition();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_forward',\n    value: function _forward() {\n      this.origin.copy(this.base._getWorldPosition());\n      if (this.target) {\n        this._targetPosition.setFromMatrixPosition(this.target.matrixWorld);\n        this.effector._setWorldPosition(this._targetPosition);\n      } else if (!this.joints[this.joints.length - 1]._isSubBase) {\n        return;\n      }\n      for (var i = 1; i < this.joints.length; i++) {\n        var joint = this.joints[i];\n        if (joint._isSubBase) {\n          joint._applySubBasePositions();\n        }\n      }\n      for (var _i = this.joints.length - 1; _i > 0; _i--) {\n        var _joint = this.joints[_i];\n        var prevJoint = this.joints[_i - 1];\n        var direction = prevJoint._getWorldDirection(_joint);\n        var worldPosition = direction.multiplyScalar(_joint.distance).add(_joint._getWorldPosition());\n        if (prevJoint === this.base && this.base._isSubBase) {\n          this.base._subBasePositions.push(worldPosition);\n        } else {\n          prevJoint._setWorldPosition(worldPosition);\n        }\n      }\n    }\n  }, {\n    key: '_backward',\n    value: function _backward() {\n      if (!this.base._isSubBase) {\n        this.base._setWorldPosition(this.origin);\n      }\n      for (var i = 0; i < this.joints.length - 1; i++) {\n        var joint = this.joints[i];\n        var nextJoint = this.joints[i + 1];\n        var jointWorldPosition = joint._getWorldPosition();\n        var direction = nextJoint._getWorldDirection(joint);\n        joint._setDirection(direction);\n        joint._applyConstraints();\n        direction.copy(joint._direction);\n        if (!(this.base === joint && joint._isSubBase)) {\n          joint._applyWorldPosition();\n        }\n        nextJoint._setWorldPosition(direction.multiplyScalar(nextJoint.distance).add(jointWorldPosition));\n        if (i === this.joints.length - 2) {\n          if (nextJoint !== this.effector) {\n            nextJoint._setDirection(direction);\n          }\n          nextJoint._applyWorldPosition();\n        }\n      }\n      return this._getDistanceFromTarget();\n    }\n  }]);\n  return IKChain;\n}();\n\nvar IK = function () {\n  function IK() {\n    classCallCheck(this, IK);\n    this.chains = [];\n    this._needsRecalculated = true;\n    this.isIK = true;\n    this._orderedChains = null;\n  }\n  createClass(IK, [{\n    key: 'add',\n    value: function add(chain) {\n      if (!chain.isIKChain) {\n        throw new Error('Argument is not an IKChain.');\n      }\n      this.chains.push(chain);\n    }\n  }, {\n    key: 'recalculate',\n    value: function recalculate() {\n      this._orderedChains = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = this.chains[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rootChain = _step.value;\n          var orderedChains = [];\n          this._orderedChains.push(orderedChains);\n          var chainsToSave = [rootChain];\n          while (chainsToSave.length) {\n            var chain = chainsToSave.shift();\n            orderedChains.push(chain);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n            try {\n              for (var _iterator2 = chain.chains.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var subChains = _step2.value;\n                var _iteratorNormalCompletion3 = true;\n                var _didIteratorError3 = false;\n                var _iteratorError3 = undefined;\n                try {\n                  for (var _iterator3 = subChains[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var subChain = _step3.value;\n                    if (chainsToSave.indexOf(subChain) !== -1) {\n                      throw new Error('Recursive chain structure detected.');\n                    }\n                    chainsToSave.push(subChain);\n                  }\n                } catch (err) {\n                  _didIteratorError3 = true;\n                  _iteratorError3 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                      _iterator3.return();\n                    }\n                  } finally {\n                    if (_didIteratorError3) {\n                      throw _iteratorError3;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'solve',\n    value: function solve() {\n      if (!this._orderedChains) {\n        this.recalculate();\n      }\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n      try {\n        for (var _iterator4 = this._orderedChains[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var subChains = _step4.value;\n          var iterations = 1;\n          while (iterations > 0) {\n            for (var i = subChains.length - 1; i >= 0; i--) {\n              subChains[i]._updateJointWorldPositions();\n            }\n            for (var _i = subChains.length - 1; _i >= 0; _i--) {\n              subChains[_i]._forward();\n            }\n            var withinTolerance = true;\n            for (var _i2 = 0; _i2 < subChains.length; _i2++) {\n              var distanceFromTarget = subChains[_i2]._backward();\n              if (distanceFromTarget > this.tolerance) {\n                withinTolerance = false;\n              }\n            }\n            if (withinTolerance) {\n              break;\n            }\n            iterations--;\n            \n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'getRootBone',\n    value: function getRootBone() {\n      return this.chains[0].base.bone;\n    }\n  }]);\n  return IK;\n}();\n\nvar BoneHelper = function (_Object3D) {\n  inherits(BoneHelper, _Object3D);\n  function BoneHelper(height, boneSize, axesSize) {\n    classCallCheck(this, BoneHelper);\n    var _this = possibleConstructorReturn(this, (BoneHelper.__proto__ || Object.getPrototypeOf(BoneHelper)).call(this));\n    if (height !== 0) {\n      var geo = new ConeGeometry(boneSize, height, 4);\n      geo.applyMatrix(new Matrix4().makeRotationAxis(new Vector3(1, 0, 0), MathUtils.PI / 2));\n      _this.boneMesh = new Mesh(geo, new MeshBasicMaterial({\n        color: 0xff0000,\n        wireframe: true,\n        depthTest: false,\n        depthWrite: false\n      }));\n    } else {\n      _this.boneMesh = new Object3D();\n    }\n    _this.boneMesh.position.z = height / 2;\n    _this.add(_this.boneMesh);\n    _this.axesHelper = new AxesHelper(axesSize);\n    _this.add(_this.axesHelper);\n    return _this;\n  }\n  return BoneHelper;\n}(Object3D);\nvar IKHelper = function (_Object3D2) {\n  inherits(IKHelper, _Object3D2);\n  function IKHelper(ik) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        color = _ref.color,\n        showBones = _ref.showBones,\n        boneSize = _ref.boneSize,\n        showAxes = _ref.showAxes,\n        axesSize = _ref.axesSize,\n        wireframe = _ref.wireframe;\n    classCallCheck(this, IKHelper);\n    var _this2 = possibleConstructorReturn(this, (IKHelper.__proto__ || Object.getPrototypeOf(IKHelper)).call(this));\n    boneSize = boneSize || 0.1;\n    axesSize = axesSize || 0.2;\n    if (!ik.isIK) {\n      throw new Error('IKHelper must receive an IK instance.');\n    }\n    _this2.ik = ik;\n    _this2._meshes = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n      for (var _iterator = _this2.ik.chains[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var rootChain = _step.value;\n        var chainsToMeshify = [rootChain];\n        while (chainsToMeshify.length) {\n          var chain = chainsToMeshify.shift();\n          for (var i = 0; i < chain.joints.length; i++) {\n            var joint = chain.joints[i];\n            var nextJoint = chain.joints[i + 1];\n            var distance = nextJoint ? nextJoint.distance : 0;\n            if (chain.base === joint && chain !== rootChain) {\n              continue;\n            }\n            var mesh = new BoneHelper(distance, boneSize, axesSize);\n            mesh.matrixAutoUpdate = false;\n            _this2._meshes.set(joint, mesh);\n            _this2.add(mesh);\n          }\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n          try {\n            for (var _iterator2 = chain.chains.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var subChains = _step2.value;\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n              try {\n                for (var _iterator3 = subChains[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var subChain = _step3.value;\n                  chainsToMeshify.push(subChain);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    _this2.showBones = showBones !== undefined ? showBones : true;\n    _this2.showAxes = showAxes !== undefined ? showAxes : true;\n    _this2.wireframe = wireframe !== undefined ? wireframe : true;\n    _this2.color = color || new Color(0xff0077);\n    return _this2;\n  }\n  createClass(IKHelper, [{\n    key: 'updateMatrixWorld',\n    value: function updateMatrixWorld(force) {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n      try {\n        for (var _iterator4 = this._meshes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _ref2 = _step4.value;\n          var _ref3 = slicedToArray(_ref2, 2);\n          var joint = _ref3[0];\n          var mesh = _ref3[1];\n          mesh.matrix.copy(joint.bone.matrixWorld);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n      get(IKHelper.prototype.__proto__ || Object.getPrototypeOf(IKHelper.prototype), 'updateMatrixWorld', this).call(this, force);\n    }\n  }, {\n    key: 'showBones',\n    get: function get$$1() {\n      return this._showBones;\n    },\n    set: function set$$1(showBones) {\n      if (showBones === this._showBones) {\n        return;\n      }\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n      try {\n        for (var _iterator5 = this._meshes[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _ref4 = _step5.value;\n          var _ref5 = slicedToArray(_ref4, 2);\n          var mesh = _ref5[1];\n          if (showBones) {\n            mesh.add(mesh.boneMesh);\n          } else {\n            mesh.remove(mesh.boneMesh);\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n      this._showBones = showBones;\n    }\n  }, {\n    key: 'showAxes',\n    get: function get$$1() {\n      return this._showAxes;\n    },\n    set: function set$$1(showAxes) {\n      if (showAxes === this._showAxes) {\n        return;\n      }\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n      try {\n        for (var _iterator6 = this._meshes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _ref6 = _step6.value;\n          var _ref7 = slicedToArray(_ref6, 2);\n          var mesh = _ref7[1];\n          if (showAxes) {\n            mesh.add(mesh.axesHelper);\n          } else {\n            mesh.remove(mesh.axesHelper);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n      this._showAxes = showAxes;\n    }\n  }, {\n    key: 'wireframe',\n    get: function get$$1() {\n      return this._wireframe;\n    },\n    set: function set$$1(wireframe) {\n      if (wireframe === this._wireframe) {\n        return;\n      }\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n      try {\n        for (var _iterator7 = this._meshes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _ref8 = _step7.value;\n          var _ref9 = slicedToArray(_ref8, 2);\n          var mesh = _ref9[1];\n          if (mesh.boneMesh.material) {\n            mesh.boneMesh.material.wireframe = wireframe;\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n      this._wireframe = wireframe;\n    }\n  }, {\n    key: 'color',\n    get: function get$$1() {\n      return this._color;\n    },\n    set: function set$$1(color) {\n      if (this._color && this._color.equals(color)) {\n        return;\n      }\n      color = color && color.isColor ? color : new Color(color);\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n      try {\n        for (var _iterator8 = this._meshes[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _ref10 = _step8.value;\n          var _ref11 = slicedToArray(_ref10, 2);\n          var mesh = _ref11[1];\n          if (mesh.boneMesh.material) {\n            mesh.boneMesh.material.color = color;\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n      this._color = color;\n    }\n  }]);\n  return IKHelper;\n}(Object3D);\n\nif (typeof window !== 'undefined' && _typeof(window.THREE) === 'object') {\n  window.THREE.IK = IK;\n  window.THREE.IKChain = IKChain;\n  window.THREE.IKJoint = IKJoint;\n  window.THREE.IKBallConstraint = IKBallConstraint;\n  window.THREE.IKHelper = IKHelper;\n}\n\nexport { IK, IKChain, IKJoint, IKBallConstraint, IKHelper };\n"],
  "mappings": "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",
  "names": ["arg", "get", "IKBallConstraint", "IKJoint", "IKChain", "IK", "BoneHelper", "IKHelper"]
}
